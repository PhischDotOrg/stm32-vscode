{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(lldb) Starten",
            "type": "cppdbg",
            "request": "launch",
            "program": "${command:cmake.launchTargetPath}",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "lldb"
        },
        {
            "name" : "Remote C/C++ GDB",
            "type" :"cppdbg",
            "request": "launch",
            "program": "${workspaceRoot}/build/common/firmware.elf",
            "miDebuggerServerAddress": "localhost:4242",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${workspaceRoot}/build",
            "environment": [],
            "externalConsole": false,
            "osx" : {
                "miDebuggerPath": "arm-none-eabi-gdb"
            },
            "windows": {
                "miDebuggerPath": "c:\\Program Files (x86)\\GNU Tools Arm Embedded\\9 2019-q4-major\\bin\\arm-none-eabi-gdb.exe"
            },
            "linux" : {
                "miDebuggerPath": "gdb-multiarch",
            },
            /*
             * The "preLaunchTask" could theoretically be used to start the GDB server (i.e. OpenOCD). However,
             * OpenOCD will start as a server but doesn't spawn into the background. Hence, this task will never
             * complete from a VisualStudio Code Perspective.
             */
            // "preLaunchTask" : "Start OpenOCD (GDB Server)"
            /*
            "logging": {
                "moduleLoad": true,
                "trace": true,
                "engineLogging": true,
                "programOutput": true,
                "exceptions": true
             },
           */
        },
        {
            "name": "Black Magic Probe",
            "cwd": "${workspaceRoot}",
            "BMPGDBSerialPort": "/dev/cu.usbmodem4D81905D1",
            "interface": "swd",
            "type": "cortex-debug",
            "request": "launch",
            "servertype": "bmp",
            "device": "${input:TargetCpu}",
            "svdFile" : "${workspaceRoot}/build/common/STM32.svd",
            "executable": "${workspaceRoot}/build/common/firmware.elf",
            // "preLaunchTask": "build",
            "postLaunchCommands": [
                "monitor traceswo"
            ]
        },
        {
            "request": "launch",
            "type": "cortex-debug",
            "name": "Segger J-Link (Launch)",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/build/common/firmware.elf",
            "servertype": "jlink",
            "device": "${input:TargetCpu}",
            "windows": {
                "armToolchainPath": "C:\\Program Files (x86)\\GNU Arm Embedded Toolchain\\10 2020-q4-major\\bin",
                "serverpath": "C:\\Program Files (x86)\\SEGGER\\JLink\\JLinkGDBServerCL.exe",
                "rtos": "C:\\Program Files (x86)\\SEGGER\\JLink\\GDBServer\\RTOSPlugin_FreeRTOS.dll",
            },
            "osx": {
                "armToolchainPath": "/usr/local/bin/",
                "serverpath": "/Applications/SEGGER/JLink/JLinkGDBServerCLExe",
                "rtos": "/Applications/SEGGER/JLink/GDBServer/RTOSPlugin_FreeRTOS.dylib",
            },
            "linux": {
                "armToolchainPath": "/usr/bin/",
                "gdbPath": "gdb-multiarch",
                "serverpath": "/usr/bin/JLinkGDBServer",
                "rtos": "/opt/SEGGER/JLink/GDBServer/RTOSPlugin_FreeRTOS.so",
            },
            "interface": "swd",
            //"serialNumber": "", //If you have more than one J-Link probe, add the serial number here.
            // "jlinkscript":"${workspaceRoot}/BSP/SEGGER/K66FN2M0_emPower/Setup/Kinetis_K66_Target.js",
            "runToMain": false,
            "svdFile" : "${workspaceRoot}/build/common/STM32.svd",
            "postLaunchCommands": [
                "monitor SWO EnableTarget 0 0 0x101 0"
            ],
            "swoConfig":{
                "enabled":true,
                "source":"probe",
                "swoFrequency": 0, /* 0 = JLink Auto-Detection */
                "cpuFrequency": 0, /* 0 = JLink Auto-Detection */
                "decoders": [
                    {
                        "port": 8,
                        "type": "console",
                        "label": "SWO output",
                        "encoding":"ascii"
                    }
                ]
            }
        },
        {
            "request": "attach",
            "type": "cortex-debug",
            "name": "Segger J-Link (Attach)",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/build/common/firmware.elf",
            "servertype": "jlink",
            "device": "${input:TargetCpu}",
            "windows": {
                "armToolchainPath": "C:\\Program Files (x86)\\GNU Arm Embedded Toolchain\\10 2020-q4-major\\bin",
                "serverpath": "C:\\Program Files (x86)\\SEGGER\\JLink\\JLinkGDBServerCL.exe",
                "rtos": "C:\\Program Files (x86)\\SEGGER\\JLink\\GDBServer\\RTOSPlugin_FreeRTOS.dll"
            },
            "osx" : {
                "armToolchainPath": "/usr/local/bin/",
                "serverpath": "/Applications/SEGGER/JLink/JLinkGDBServerCLExe",
                "rtos": "/Applications/SEGGER/JLink/GDBServer/RTOSPlugin_FreeRTOS.dylib",
            },
            "linux": {
                "armToolchainPath": "/usr/bin/",
                "gdbPath": "gdb-multiarch",
                "serverpath": "/usr/bin/JLinkGDBServer",
                "rtos": "/opt/SEGGER/JLink/GDBServer/RTOSPlugin_FreeRTOS.so",
            },
            "interface": "swd",
            //"serialNumber": "", //If you have more than one J-Link probe, add the serial number here.
            // "jlinkscript":"${workspaceRoot}/BSP/SEGGER/K66FN2M0_emPower/Setup/Kinetis_K66_Target.js",
            "svdFile" : "${workspaceRoot}/build/common/STM32.svd",
            "swoConfig":{
                "enabled":true,
                "source":"probe",
                "swoFrequency": 0, /* 0 = JLink Auto-Detection */
                "cpuFrequency": 0, /* 0 = JLink Auto-Detection */
                "decoders": [
                    {
                        "port": 8,
                        "type": "console",
                        "label": "SWO output",
                        "encoding":"ascii"
                    }
                ]
            }
        }
    ],
    "inputs" : [
        {
            "id" : "TargetCpu",
            "type" : "pickString",
            "description": "STM32 Target CPU Type",
            "options" : [
                "STM32F103C8",
                "STM32F401CC",
                "STM32F407VG",
                "STM32F411RE",
            ]
        }

    ]
}
